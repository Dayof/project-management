digraph "Catch::Section"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Catch::Section\n|- m_sectionIncluded\l|+ Section()\l+ ~Section()\l+ operator bool()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="firebrick4",fontsize="10",style="solid",arrowtail="onormal"];
  Node2 [label="{Catch::NonCopyable\n||# NonCopyable()\l# ~NonCopyable()\l- NonCopyable()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCatch_1_1NonCopyable.html"];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_info" ,arrowhead="odiamond"];
  Node3 [label="{Catch::SectionInfo\n||+ SectionInfo()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structCatch_1_1SectionInfo.html"];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +lineInfo" ,arrowhead="odiamond"];
  Node4 [label="{Catch::SourceLineInfo\n|+ line\l|+ SourceLineInfo()\l+ SourceLineInfo()\l+ SourceLineInfo()\l+ empty()\l+ operator==()\l+ operator\<()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structCatch_1_1SourceLineInfo.html"];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +file" ,arrowhead="odiamond"];
  Node5 [label="{std::string\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class. "];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node6 [label="{std::basic_string\<\l char \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class. "];
  Node5 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +name\n+description" ,arrowhead="odiamond"];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_timer" ,arrowhead="odiamond"];
  Node7 [label="{Catch::Timer\n|- m_ticks\l|+ Timer()\l+ start()\l+ getElapsedMicroseconds()\l+ getElapsedMilliseconds()\l+ getElapsedSeconds()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCatch_1_1Timer.html"];
  Node5 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_name" ,arrowhead="odiamond"];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_assertions" ,arrowhead="odiamond"];
  Node8 [label="{Catch::Counts\n|+ passed\l+ failed\l+ failedButOk\l|+ Counts()\l+ operator-()\l+ operator+=()\l+ total()\l+ allPassed()\l+ allOk()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structCatch_1_1Counts.html"];
}
